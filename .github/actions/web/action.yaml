name: Build doxygen docs
description: Build doxygen docs
runs:
    using: composite
    steps:
        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.8'
        - name: Cache Python environment
          uses: actions/cache@v2
          id: cache-python
          with:
            path: web/.venv
            key: web/.venv-${{ hashFiles('web/requirements.txt') }}
        - name: Check for Apt updates
          shell: bash
          run: |
            sudo apt-get update -yq
            echo "aptVersion=doxygen-$(apt-cache policy doxygen | grep -oP '(?<=Candidate:\s)(.+)')-graphviz-$(apt-cache policy graphviz | grep -oP '(?<=Candidate:\s)(.+)')" >> $GITHUB_ENV
        - name: Cache Apt packages
          uses: actions/cache@v2
          id: cache-apt
          with:
            path: ~/.aptcache
            key: ${{ env.aptVersion }}
        - name: Install or restore Apt packages
          shell: bash
          env:
            CACHE_HIT: ${{ steps.cache-apt.outputs.cache-hit }}
          run: |
            if [[ "$CACHE_HIT" != 'true' ]]; then
                sudo apt-get install -yq doxygen graphviz
                mkdir -p ~/.aptcache
                sudo dpkg -L doxygen graphviz | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/.aptcache/
            else
                sudo cp --verbose --force --recursive ~/.aptcache/* /
            fi
        - name: Build website
          shell: bash
          run: cd web && make prod
        - name: Generate liboxide docs
          shell: bash
          run: |
            cd shared/liboxide && make prod
